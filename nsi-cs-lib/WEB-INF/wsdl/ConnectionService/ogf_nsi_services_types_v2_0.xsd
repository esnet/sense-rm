<?xml version="1.0" encoding="UTF-8"?>
<!--
The OGF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights.  Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the OGF Secretariat.

The OGF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this recommendation.  Please address the information to the OGF Executive Director.

This document and the information contained herein is provided on an "As Is" basis and the OGF disclaims all warranties, express or implied, including but not limited to any warranty that the use of the information herein will not infringe any rights or any implied warranties of merchantability or fitness for a particular purpose.

Copyright (C) Open Grid Forum (2009-2014). All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the OGF or other organizations, except as needed for the purpose of developing Grid Recommendations in which case the procedures for copyrights defined in the OGF Document process must be followed, or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by the OGF or its successors or assignees.

Open Grid Forum NSI Connection Services Protocol v2.0 - Service specific type schema.
-->
<xsd:schema targetNamespace="http://schemas.ogf.org/nsi/2013/12/services/types"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://schemas.ogf.org/nsi/2013/12/services/types">
    
    <xsd:annotation>
        <xsd:documentation xml:lang="en">
            This is an XML schema document describing the OGF NSI service
            specific types.
        </xsd:documentation>
    </xsd:annotation>
    
    <!-- Type definitions for services types. -->
    <xsd:simpleType name="StpIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Service Termination Points (STPs) are an NSI topology objects
                that identify the Edge Points of a Network in the intra-network
                topology.  This type defines an STP identifier.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
    
    <xsd:complexType name="StpListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A simple ordered list type of Service Termination Point (STP). List
                order is determined by the integer order attribute in the orderedSTP
                element.
                
                Elements:
                
                orderedSTP - A list of STP ordered 0..n by their integer order attribute.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="orderedSTP" type="tns:OrderedStpType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="OrderedStpType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A Service Termination Point (STP) that can be ordered in a list for
                use in PathObject definition.
                
                Attributes:
                
                order - Order attribute is provided only when the STP is part of an
                orderedStpList.
                
                Elements:
                
                stp - The Service Termination Point (STP).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="stp" type="tns:StpIdType" />
        </xsd:sequence>
        <xsd:attribute   name="order" type="xsd:int" use="required" />
    </xsd:complexType>
    
    <xsd:complexType name="TypeValueType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Definition for a simple type and value tuple.
                
                Attributes:
                type - A string representing the name of the type.     
            </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleContent>
            <xsd:extension  base="xsd:string">
                <xsd:attribute  name="type"  type="xsd:string"  use="required"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
    
    <xsd:complexType name="ClusionType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type definition is used to model pathfinding inclusions/
                exclusions in a point-to-point service request.
                
                Inclusions provide pathfinders with a specific set of resources
                to use in path computation.  Different from an ERO in that an
                ERO provides a specific path through the network, while
                inclusions specifies the starting set of resources to be used in
                pathfinding (not all of the resources need be used).
                
                Exclusions provide a mechanism allowing an RA to specify a set of
                resources that must be excluded when computing a path.
                
                If an inclusion(s) is present it is used to build the initial
                routing graph, otherwise the complete set of resources are used.
                
                If an exclusion(s) is present then the specified exclusion(s) are
                pruned from the graph.
                
                Any ERO is applied during pathfinding using the resulting graph.
                
                Elements:
                
                lt - less than contitional element.
                lte - less than equal to conditional element.
                gt - greater than conditional element.
                gte - greater than equal to conditional eement.
                eq - equal conditional element.
                
                Attributes:
                type - A string representing the name of the parameter.     
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:choice>
                <xsd:element name="lt"  type="xsd:anyType" minOccurs="0" />
                <xsd:element name="lte" type="xsd:anyType" minOccurs="0" />
            </xsd:choice>
            <xsd:choice>
                <xsd:element name="gt"  type="xsd:anyType" minOccurs="0" />
                <xsd:element name="gte" type="xsd:anyType" minOccurs="0" />
            </xsd:choice>
            <xsd:element name="eq"  type="xsd:anyType" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute   name="type" type="xsd:string" use="required" />
    </xsd:complexType>
    
    <xsd:simpleType name="DirectionalityType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The directionality of the requested data service.  Possible values
                are "Bidirectional" for a bidirectional data service, and
                "Unidirectional" for a unidirectional data service.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Bidirectional" />
            <xsd:enumeration value="Unidirectional" />
        </xsd:restriction>
    </xsd:simpleType>
</xsd:schema>
