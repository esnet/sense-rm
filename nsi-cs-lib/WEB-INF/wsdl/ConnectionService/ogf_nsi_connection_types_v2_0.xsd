<?xml version="1.0" encoding="UTF-8"?>
<!--
    The OGF takes no position regarding the validity or scope of any intellectual property or other rights that might be claimed to pertain to the implementation or use of the technology described in this document or the extent to which any license under such rights might or might not be available; neither does it represent that it has made any effort to identify any such rights.  Copies of claims of rights made available for publication and any assurances of licenses to be made available, or the result of an attempt made to obtain a general license or permission for the use of such proprietary rights by implementers or users of this specification can be obtained from the OGF Secretariat.

    The OGF invites any interested party to bring to its attention any copyrights, patents or patent applications, or other proprietary rights which may cover technology that may be required to practice this recommendation.  Please address the information to the OGF Executive Director.

    This document and the information contained herein is provided on an "As Is" basis and the OGF disclaims all warranties, express or implied, including but not limited to any warranty that the use of the information herein will not infringe any rights or any implied warranties of merchantability or fitness for a particular purpose.

    Copyright (C) Open Grid Forum (2009-2014). All Rights Reserved.

    This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this paragraph are included on all such copies and derivative works. However, this document itself may not be modified in any way, such as by removing the copyright notice or references to the OGF or other organizations, except as needed for the purpose of developing Grid Recommendations in which case the procedures for copyrights defined in the OGF Document process must be followed, or as required to translate it into languages other than English.

    The limited permissions granted above are perpetual and will not be revoked by the OGF or its successors or assignees.

    Open Grid Forum NSI Connection Services Protocol v2.0

    Description: This is the types schema for the reference web services implementation of the OGF NSI Connection Services Protocol v2.0. This can be considered the transport independent protocol representation.  Comments and questions can be directed to the mailing list group mailing list (nsi-wg@ogf.org).
-->
<xsd:schema targetNamespace="http://schemas.ogf.org/nsi/2013/12/connection/types"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:ftypes="http://schemas.ogf.org/nsi/2013/12/framework/types"
    xmlns:tns="http://schemas.ogf.org/nsi/2013/12/connection/types">

    <xsd:annotation>
        <xsd:documentation xml:lang="en">
            This is an XML schema document describing the OGF NSI Connection
            Services protocol version 2.0. The Connection Service is message
            based command protocol that operates between a Requester
            Network Service Agent (NSA) and a Provider NSA. The protocol includes
            a set of defined primitives that are intended to provide the control
            necessary to manage the lifecycle of a connection reservation.
            
            The following primitives are supported in this version of the NSI CS
            protocol:
            
            1. Reserve - Make a request to reserve network resources for a
            connection between two STP's constrained by a certain service
            parameters or request a modification of an existing reservation.
            Any required resources will be pre-allocated and held until
            the commit of this reserve is received.
            
            3. ReserveCommit - Commit a previously allocated reservation
            or modification on a reservation.
            
            4. ReserveAbort - Cancel a pending reservation or modification
            and release any associated resources.
            
            5. Provision - Provider NSA has been given permission to setup a
            reservation (associated with a previous reserve message) on
            the Requester NSA's behalf but subject to the constraints of
            the requested service.
            
            6. Release - Provider NSA should release the provisioned resources
            without removing the reservation.
            
            7. Terminate - Provider NSA should release the provisioned resources
            and terminate the reservation.
            
            8. QuerySummary - Mechanism for either NSA to query the other NSA
            for a set of connection service instances between the RA-PA pair.
            The returned results will be a summary of the reservation
            information.
            
            9. QuerySummarySync - Mechanism for a requester NSA to query the
            provider NSA for a set of connection service instances between the
            RA-PA pair. The returned results will be a summary of the
            reservation information.  This is a synchronous blocking operation
            and not asynchronous like QuerySummary and QueryRecursive.
            
            10. QueryRecursive - Mechanism for either NSA to query the other
            NSA for a set of connection service instances between the RA-PA
            pair. The returned results will be a detailed list of reservation
            information collected by recursively traversing the reservation
            tree.

            11. QueryNotification - Mechanism for a requester NSA to query the
            provider NSA for a set of notifications against a connectionId.  The
            returned results will be a list of notifications for the specified
            connectionId.

            12. QueryNotificationSync - Mechanism for a requester NSA to query the
            provider NSA for a set of notifications against a connectionId.  The
            returned results will be a list of notifications for the specified
            connectionId.  This is a synchronous blocking operation.
            
            13. queryResult - Mechanism for a requester NSA to query the
            provider NSA for a set of operation results (Confirmed, Failed, Error)
            against a connectionId. A list of previous results for the specified
            connectionId will be returned.
            
            14. queryResultSync - Mechanism for a requester NSA to query the
            provider NSA for a set of operation results (Confirmed, Failed, Error)
            against a connectionId. A list of previous results for the specified
            connectionId will be returned.  This is a synchronous blocking
            operation.           
            
            In addition, there are four notification primitives:
            
            1. errorEvent - An autonomous message issued from a Provider NSA to
            a Requester NSA when an existing reservation encounters an
            autonomous error condition such as being administratively terminated
            before the reservation's scheduled end-time.
            
            2. reserveTimeout -An autonomous message issued from a Provider NSA to
            a Requester NSA when a timeout on an existing reserve request occurs
            and uncommitted resources have been freed.
            
            3. dataPlaneStateChange - An autonomous message issued from a Provider
            NSA to a Requester NSA when a data plane state change event has occurred
            within the network.
            
            4. messageDeliveryTimeout - Notification message for a message
            transport layer delivery timeout of an NSI CS request message.
            In the event of an MTL or Coordinator timeout, the Coordinator
            will generate this message delivery failure notification and
            send it up the workflow tree (towards the uRA).
            
            If the uRA wants to request a resend of the the original message
            it must issue the original operation again with the same
            correlationId. Aggregators receiving the request SHOULD only
            attempt redelivery of the message to children that it did not
            receive an acknowledgement for (i.e. MTL timeout) or reply to
            (i.e. Coordinator timeout) the original message.
            
            The Connection Service protocol is an asynchronous protocol where
            each primitive may consist of four operations:
            
            1. Request - A Requester NSA issues an operation request message
            such as "reserve" to the Provider NSA. The Requester NSA can
            expect an response to the request at some point in the future.
            
            2. Response - A Provider NSA may issue an immediate response
            to the Requester NSA providing needed progress information.
            For example, a requester NSA issuing a "reserve" request can
            expect a "reserveResponse" message providing the connectionId
            needed for querying reservation progress.
            
            3. Confirmed - A Provider NSA sends this positive operation
            response message (such as "reserveConfirmed") to the Requester
            NSA that issued the original request message ("reserveRequest").
            
            4. Failed - A Provider NSA sends this negative operation response
            message (such as "reserveFailed") to the Requester NSA that
            issued the original request message ("reserveRequest").
        </xsd:documentation>
    </xsd:annotation>
    
    <!-- Import the common NSI framework types. -->
    <xsd:import namespace="http://schemas.ogf.org/nsi/2013/12/framework/types"
        schemaLocation="ogf_nsi_framework_types_v2_0.xsd"/>
    
    <!-- ******************************************************************
         *                  NSI protocol messages                         *
         ****************************************************************** -->

    <!-- ********** Reserve message elements ********** -->
    <xsd:element name="reserve"          type="tns:ReserveType" />
    <xsd:element name="reserveResponse"  type="tns:ReserveResponseType" />
    <xsd:element name="reserveConfirmed" type="tns:ReserveConfirmedType" />
    <xsd:element name="reserveFailed"    type="tns:GenericFailedType" />

    <xsd:element name="reserveCommit"          type="tns:GenericRequestType" />
    <xsd:element name="reserveCommitConfirmed" type="tns:GenericConfirmedType" />
    <xsd:element name="reserveCommitFailed"    type="tns:GenericFailedType" />
    
    <xsd:element name="reserveAbort"          type="tns:GenericRequestType" />
    <xsd:element name="reserveAbortConfirmed" type="tns:GenericConfirmedType" />

    <!-- ********** Provision message elements ********** -->
    <xsd:element name="provision"            type="tns:GenericRequestType" />
    <xsd:element name="provisionConfirmed"   type="tns:GenericConfirmedType" />

    <!-- ********** Release message elements ********** -->
    <xsd:element name="release"              type="tns:GenericRequestType" />
    <xsd:element name="releaseConfirmed"     type="tns:GenericConfirmedType" />

    <!-- ********** Terminate message elements ********** -->
    <xsd:element name="terminate"            type="tns:GenericRequestType" />
    <xsd:element name="terminateConfirmed"   type="tns:GenericConfirmedType" />

    <!-- ********** QuerySummary message elements ********** -->
    <xsd:element name="querySummary"           type="tns:QueryType" />
    <xsd:element name="querySummaryConfirmed"  type="tns:QuerySummaryConfirmedType" />

    <!-- ********** QueryRecursive message elements ********** -->
    <xsd:element name="queryRecursive"           type="tns:QueryType" />
    <xsd:element name="queryRecursiveConfirmed"  type="tns:QueryRecursiveConfirmedType" />

    <!-- ********** QuerySummarySync message elements ********** -->
    <xsd:element name="querySummarySync"           type="tns:QueryType" />
    <xsd:element name="querySummarySyncConfirmed"  type="tns:QuerySummaryConfirmedType" />

    <!-- ********** QueryNotification message elements ********** -->
    <xsd:element name="queryNotification"           type="tns:QueryNotificationType" />
    <xsd:element name="queryNotificationConfirmed"  type="tns:QueryNotificationConfirmedType" />
    
    <!-- ********** QueryNotificationSync message elements ********** -->
    <xsd:element name="queryNotificationSync"           type="tns:QueryNotificationType" />
    <xsd:element name="queryNotificationSyncConfirmed"  type="tns:QueryNotificationConfirmedType" />
    
    <!-- ********** QueryResult message elements ********** -->
    <xsd:element name="queryResult"           type="tns:QueryResultType" />
    <xsd:element name="queryResultConfirmed"  type="tns:QueryResultConfirmedType" />
    
    <!-- ********** QueryResultSync message elements ********** -->
    <xsd:element name="queryResultSync"           type="tns:QueryResultType" />
    <xsd:element name="queryResultSyncConfirmed"  type="tns:QueryResultConfirmedType" />

    <!-- ********** Error message elements ********** -->
    <xsd:element name="error" type="tns:GenericErrorType" />
    
    <!-- ********** Notification message elements ********** -->
    <xsd:element name="errorEvent"             type="tns:ErrorEventType" />
    <xsd:element name="reserveTimeout"         type="tns:ReserveTimeoutRequestType" />
    <xsd:element name="dataPlaneStateChange"   type="tns:DataPlaneStateChangeRequestType" />
    <xsd:element name="messageDeliveryTimeout" type="tns:MessageDeliveryTimeoutRequestType" />

    <!-- ********** Acknowledgment message element ********** -->
    <xsd:element name="acknowledgment" type="tns:GenericAcknowledgmentType" />
    
    <!-- ********** Fault message element ********** -->
    <xsd:element name="serviceException" type="ftypes:ServiceExceptionType"/>
    
    <!-- ******************************************************************
        *                   NSI message types                            *
        ****************************************************************** -->
    
    <xsd:complexType name="ReserveType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The NSI CS reserve message allows a RA to reserve network
                resources associated with a service within the Network
                constrained by the provided service parameters.  This operation
                allows a Requester NSA to check the feasibility of connection
                reservation or a modification to an existing reservation. Any
                resources associated with the reservation or modification will
                be allocated and held until a reserveConfirmed is received or
                timeout occurs.

                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context of the
                Provider NSA.  Provided in reserve request only when an existing
                reservation is being modified.
                
                globalReservationId - An optional global reservation id that can be
                used to correlate individual related service reservations through
                the network. This must be populated with a Universally Unique
                Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
                and IETF RFC 4122.
                
                description - An optional description for the service reservation.
                
                criteria - Reservation request criteria including version,
                start and end time, service type, and service specific schema
                elements.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" minOccurs="0" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:ReservationRequestCriteriaType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ReserveResponseType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserveResponse message. A Provider NSA
                sends this reserveResponse message immediately after receiving
                the reservation request to inform the Requester NSA of the
                connectionId allocated to their reservation request.  This
                connectionId can then be used to query reservation progress.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation request. This value will be unique within the context
                of the Provider NSA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId" type="ftypes:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ReserveConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the reserveConfirmed message. A Provider NSA
                sends this positive reserveRequest response to the Requester NSA
                that issued the original request message.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.
                
                globalReservationId - An optional global reservation id that can be
                used to correlate individual related service reservations through
                the network. This must be populated with a Universally Unique
                Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
                and IETF RFC 4122.
                
                description - An optional description for the service reservation.
                
                criteria - A set of versioned reservation criteria information.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:ReservationConfirmCriteriaType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the querySummary message providing a mechanism
                for a Requester NSA to query a Provider NSA for a set of connection
                service reservation instances between the RA-PA pair. This message
                can also be used as a status polling mechanism.
                
                Elements compose a filter for specifying the reservations to return
                in response to the query operation. Supports the querying of reservations
                based on connectionId or globalReservationId. Filter items specified
                are OR'ed to build the match criteria. If no criteria are specified
                then all reservations associated with the requesting NSA are returned.

                Elements:

                connectionId - Return reservations containing this connectionId.

                globalReservationId - Return reservations containing this
                globalReservationId.
                
                ifModifiedSince - If an NSA receives a querySummary or querySummarySync
                message containing this element, then the NSA only returns those
                reservations matching the filter elements (connectionId,
                globalReservationId) if the reservation has been created, modified, or
                has undergone a change since the specified ifModifiedSince time.  This
                includes user initiated actions such as provision and release, as well
                as state changes caused by events such as dataPlaneStateChange
                notifications (in dataPlaneStatus).
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:choice>
                <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" minOccurs="0" maxOccurs="unbounded" />
                <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" maxOccurs="unbounded" />
                <xsd:element name="ifModifiedSince"     type="xsd:dateTime" minOccurs="0" />
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QuerySummaryConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is the type definition for the querySummaryConfirmed message
                (both synchronous and asynchronous versions). An NSA sends this
                positive querySummaryRequest response to the NSA that issued the
                original request message.  There can be zero or more results
                returned in this confirmed message depending on the number of
                matching reservation results.

                Elements:

                reservation - Resulting summary set of connection reservations
                matching the query criteria.

                If there were no matches to the query then no reservation
                elements will be present.
                
                lastModified - Includes the update time of the most recently
                created/modified/updated reservation on the system. The lastModified
                element is included even if the request did not include an
                ifModifiedSince element, and if the response does not contain any
                reservation results.  This lastModified value can be used in the next
                query for this filter.  The lastModified element will only be absent
                if the NSA does not support the ifModifiedSince capability.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reservation"  type="tns:QuerySummaryResultType" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="lastModified" type="xsd:dateTime" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QueryRecursiveConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is the type definition for the queryRecursiveConfirmed
                message.  An NSA sends this positive queryRecursiveRequest
                response to the NSA that issued the original request message.
                
                Elements:
                
                reservation - Resulting recursive set of connection reservations
                matching the query criteria.
                
                If there were no matches to the query then no reservation
                elements will be present.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reservation" type="tns:QueryRecursiveResultType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryNotificationType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the QueryNotification message providing a
                mechanism for a Requester NSA to query a Provider NSA for a
                set of notifications against a specific connectionId.
                
                Elements compose a filter for specifying the notifications to
                return in response to the query operation.  The filter query
                provides an inclusive range of notification identifiers based
                on connectionId.
                
                Elements:
                
                connectionId - Notifications for this connectionId.
                
                startNotificationId - The start of the range of notificationIds
                to return.  If not present then the query should start from
                oldest notificationId available.
                
                endNotificationId - The end of the range of notificationIds
                to return.  If not present then the query should end with
                the newest notificationId available.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId" type="ftypes:ConnectionIdType" /> 
            <xsd:element name="startNotificationId" type="tns:NotificationIdType" minOccurs="0" />
            <xsd:element name="endNotificationId" type="tns:NotificationIdType" minOccurs="0" />     
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryNotificationConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A query notification confirmation containing a list of notification
                messages matching the specified query criteria.
                
                Elements:
                
                errorEvent - Error event notification.
                
                reserveTimeout - Reserve timeout notification.
                
                dataPlaneStateChange - A data plane state change notification.
                
                messageDeliveryTimeout - Message delivery timeout notification.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:choice minOccurs="0" maxOccurs="unbounded">
                <xsd:element ref="tns:errorEvent" />
                <xsd:element ref="tns:reserveTimeout" />
                <xsd:element ref="tns:dataPlaneStateChange" />
                <xsd:element ref="tns:messageDeliveryTimeout" />
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="QueryResultType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The queryResultType message provides a mechanism for a Requester
                NSA to query a Provider NSA for a set of Confirmed, Failed, or
                Errors results against a specific connectionId.
                
                Elements compose a filter for specifying the results to
                return in response to the query operation.  The filter query
                provides an inclusive range of result identifiers based
                on connectionId.
                
                Elements:
                
                connectionId - Retrieve results for this connectionId.
                
                startResultId - The start of the range of result Ids to return.
                If not present, then the query should start from oldest result
                available.
                
                endResultId - The end of the range of result Ids to return.  If
                not present then the query should end with the newest result
                available.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"   type="ftypes:ConnectionIdType" />
            <xsd:element name="startResultId"  type="tns:ResultIdType" minOccurs="0" />
            <xsd:element name="endResultId"    type="tns:ResultIdType" minOccurs="0" />     
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QueryResultConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the queryResultConfirmedType message
                providing a mechanism for a Requester NSA to get a list
                of Confirmed, Failed, or Error results against a specific
                connectionId.
                
                Elements:
                
                result - Zero or more result elements based on the results
                matching the specified query.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="result" type="tns:QueryResultResponseType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="GenericRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is a generic type definition for request messages such as
                provision, release, terminate, and forcedEnd that only need a
                connectionId as a request parameter.

                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context of the 
                Provider NSA.
         </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GenericConfirmedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This is a generic type definition for a "Confirmed" messages in
                response to a successful processing of a previous "Request"
                message such as provision, release, and terminate.

                Elements:

                connectionId - The Provider NSA assigned connectionId for this
                reservation request. This value will be unique within the context
                of the Provider NSA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"           type="ftypes:ConnectionIdType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="GenericFailedType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A generic "Failed" message type sent as request in response to a
                failure to process a previous protocol "Request" message.  This is
                used in response to all request types that can return an error.

                Elements:

                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.

                connectionStates - Overall connection state for the reservation.

                serviceException - Specific error condition - the reason for the
                failure.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="serviceException"    type="ftypes:ServiceExceptionType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="GenericErrorType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A generic "Error" message type sent in response to a previous
                protocol "Request" message.  An error message is generated when
                an error condition occurs that does not result in a state
                machine transition.  This type is used in response to all
                request types that can return an error.
                
                The correlationId carried in the NSI header will identify the
                original request associated with this error message.
                
                Elements:
                
                serviceException - Specific error condition indicating the
                reason for the failure.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="serviceException"    type="ftypes:ServiceExceptionType" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="NotificationBaseType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A base type definition for an autonomous message issued from a
                Provider NSA to a Requester NSA.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId that this
                notification is against.

                notificationId - A notification identifier that is unique in the
                context of a connectionId.  This is a linearly increasing
                identifier that can be used for ordering notifications in the
                context of the connectionId.
                
                timeStamp - Time the event was generated on the originating NSA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"     type="ftypes:ConnectionIdType" />
            <xsd:element name="notificationId"   type="tns:NotificationIdType" />
            <xsd:element name="timeStamp"        type="ftypes:DateTimeType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ErrorEventType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for an autonomous message issued from a
                Provider NSA to a Requester NSA when an existing reservation
                encounters an autonomous error condition such as being
                administratively terminated before the reservation's scheduled
                end-time.
                
                Elements:

                connectionId - The Provider NSA assigned connectionId that this
                notification is against.
                
                notificationId - A notification identifier that is unique in the
                context of a connectionId.  This is a linearly increasing
                identifier that can be used for ordering notifications in the
                context of the connectionId.
                
                timeStamp - Time the event was generated on the originating NSA.

                event - The type of event that generated this notification.
                
                originatingConnectionId - The connectionId that triggered the
                error event.
                
                originatingNSA - The NSA originating the error event.
                
                additionalInfo - Type/value pairs that can provide additional
                error context as needed.
                
                serviceException - Specific error condition - the reason for the
                generation of the error event.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension  base="tns:NotificationBaseType">
                <xsd:sequence>
                    <xsd:element name="event"                   type="tns:EventEnumType" />
                    <xsd:element name="originatingConnectionId" type="ftypes:ConnectionIdType" />
                    <xsd:element name="originatingNSA"          type="ftypes:NsaIdType" />
                    <xsd:element name="additionalInfo"          type="ftypes:TypeValuePairListType" minOccurs="0" />
                    <xsd:element name="serviceException"        type="ftypes:ServiceExceptionType" minOccurs="0" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>                
    </xsd:complexType>

    <xsd:complexType name="ReserveTimeoutRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                The reserveTimeout message is an autonomous message issued from
                a PA to an RA when a timeout on an existing reserve request
                occurs, and the PA has freed any uncommitted resources
                associated with the reservation. This type of event is
                originated from an uPA managing network resources associated
                with the reservation, and propagated up the request tree to the
                originating uRA.  An aggregator NSA (performing both a PA and
                RA role) will map the received connectionId into a context
                understood by its direct parent RA in the request tree, then
                propagate the event upwards.  The originating connectionId and
                uPA are provided in separate elements to maintain the original
                context generating the timeout.  The timeoutValue and
                timeStamp are populated by the originating uPA and propagated
                up the tree untouched by intermediate NSA.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId that this
                notification is against.
                
                notificationId - A notification identifier that is unique in the
                context of a connectionId.  This is a linearly increasing
                identifier that can be used for ordering notifications in the
                context of the connectionId.
                
                timeStamp - Time the event was generated on the originating NSA.
                
                timeoutValue - The timeout value in seconds that expired this
                reservation.
                
                originatingConnectionId - The connectionId that triggered the
                reserve timeout.
                
                originatingNSA - The NSA originating the timeout event.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension  base="tns:NotificationBaseType">
                <xsd:sequence>
                    <xsd:element name="timeoutValue"            type="xsd:int" />
                    <xsd:element name="originatingConnectionId" type="ftypes:ConnectionIdType" />
                    <xsd:element name="originatingNSA"          type="ftypes:NsaIdType" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>                
    </xsd:complexType>
    
    <xsd:complexType name="DataPlaneStateChangeRequestType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the data plane state change notification
                message.
                
                This notification message sent up from a PA when a data plane
                status has changed. Possible data plane status changes are:
                activation, deactivation and activation version change.
                
                Elements:
                
                dataPlaneStatus - Current data plane activation state for the
                reservation identified by connectionId.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension  base="tns:NotificationBaseType">
                <xsd:sequence>
                    <xsd:element name="dataPlaneStatus"  type="tns:DataPlaneStatusType" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>                
    </xsd:complexType>
    
    <xsd:complexType name="MessageDeliveryTimeoutRequestType">
        <xsd:annotation>
            <xsd:documentation  xml:lang="en">
                A notification message type definition for the Message Transport
                Layer (MTL) delivery timeout of a request message. In the event
                of an MTL timed out or Coordinator timeout, the Coordinator will
                generate this message delivery failure notification and send it
                up the workflow tree (towards the uRA).
                
                An MTL timeout can be generated as the result of a timeout
                on receiving an ACK message for a corresponding send request.
                A Coordinator timeout can occur when no confirm or fail reply
                has been received to a previous request issued by the
                Coordinator.  In both cases the local timers for these timeout
                conditions are locally defined.
                
                Elements:
                
                correlationId - This value indicates the correlationId of
                the original message that the transport layer failed to
                send.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension  base="tns:NotificationBaseType">
                <xsd:sequence>
                    <xsd:element name="correlationId"   type="ftypes:UuidType" />
                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>                
    </xsd:complexType>

    <xsd:complexType name="GenericAcknowledgmentType">
        <xsd:annotation>
            <xsd:documentation  xml:lang="en">
                Common acknowledgment message type.
                
                Elements:
                We have moved the correlationId to the header so this is
                now an empty response.
                
                Notes on acknowledgment:
                Depending on NSA implementation and thread timing an
                acknowledgment to a request operation may be returned
                after the confirm/fail for the request has been returned
                to the Requesting NSA.
                
                For protocol robustness, Requesting NSA should be
                able to accept confirm/fail before acknowledgment.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence />
    </xsd:complexType>
    
    <!-- ******************************************************************
         *             XML types used in message elements                 *
         ****************************************************************** -->

    <xsd:complexType name="ReservationRequestCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for a reservation and modification request
                criteria.  Only those values requiring change are specified in
                the modify request.  The version value specified in a
                reservation or modify request must be a positive integer
                larger than the previous version number.  A version value of
                zero is a special number indicating an allocated but not yet
                reserved reservation and cannot be specified by the RA.
                
                Elements:
                
                schedule - Time parameters specifying the life of the service.
                If not present then the service to start immediately and run
                for an infinite time.
                
                serviceType - Specific service type being requested in the
                reservation.  This service type string maps into the list
                of supported service descriptions defined by the network
                providers, and in turn, to the specific service elements
                carried in this element (through the ANY definition) required
                to specify the requested service.  The service type is
                mandatory in the original reserve request, and optional in a
                reserve issued to modify an existing reservation.
                
                any - Provides a flexible mechanism allowing additional elements
                to be provided such as the service specific attributes specified
                by serviceType.  Additional use of this element field is beyond
                the current scope of this NSI specification, but may be used in
                the future to extend the existing protocol without requiring a
                schema change.
                
                Attributes:
                
                version - The version number assigned by the RA to this
                reservation instance.  If not specified in the initial
                reservation request, the new reservation will default to one
                for the first version, however, an initial request can specify
                any positive integer except zero.  Each further reservation request
                on an existing reservation (a modify operation), will be assigned a
                linear increasing number, either specified by the RA, or
                assigned by the PA if not specified.
                
                anyAttribute - Provides a flexible mechanism allowing additional
                attributes to be provided as needed.  Use of this attribute field
                is beyond the current scope of this NSI specification, but may be
                used in the future to extend the existing protocol without
                requiring a schema change.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"      type="tns:ScheduleType" minOccurs="0" />
            <xsd:element name="serviceType"   type="xsd:string" minOccurs="0" />
            <xsd:any     namespace="##other"  processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute    name="version"      type="xsd:int" use="optional" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
    </xsd:complexType>
    
    <xsd:complexType name="ReservationConfirmCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A type definition for the reservation confirmation information
                used by PA to return reservation information to an RA.
                Includes the reservation version id to track version of the
                reservation criteria.
                
                Elements:
                
                schedule - Time parameters specifying the life of the service.
                
                serviceType - The specific service type of this reservation. 
                This service type string maps into the list of supported service
                definitions defined by the network providers.  In turn, the
                service type specifies the specific service elements carried in
                an instance of this type (through the ANY definition) that
                are associated with the requested service.
                
                any - Provides a flexible mechanism allowing additional elements

                to be provided such as the service specific attributes specified

                by serviceType.  Additional use of this element field is beyond

                the current scope of this NSI specification, but may be used in

                the future to extend the existing protocol without requiring a

                schema change.

                
                Attributes:
                
                version - Version of the reservation instance.
                
                anyAttribute - Provides a flexible mechanism allowing additional

                attributes to be provided as needed.  Use of this attribute field

                is beyond the current scope of this NSI specification, but may be
                used in the future to extend the existing protocol without

                requiring a schema change.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"      type="tns:ScheduleType" />
            <xsd:element name="serviceType"   type="xsd:string" />
            <xsd:any     namespace="##other"  processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute    name="version"      type="xsd:int" use="required" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
    </xsd:complexType>
    
    <xsd:complexType name="QuerySummaryResultType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
            Type containing the set of reservation parameters associated with
            a "Summary" query result.

            Elements:
            
            connectionId - The Provider NSA assigned connectionId for this
            reservation. This value will be unique within the context
            of the Provider NSA.
            
            globalReservationId - An optional global reservation id that can be
            used to correlate individual related service reservations through
            the network. This must be populated with a Universally Unique
            Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
            and IETF RFC 4122.
            
            description - An optional description for the service reservation.
            
            criteria - A set of versioned reservation criteria information.
            
            requesterNSA - The requester NSA associated with the reservation.

            connectionStates - The reservation's overall connection states.
            
            notificationId - If present will hold the notification identifier
            of the most recent notification against this reservation.
            The notificationId can be used in the queryNotification operation
            to retrieve the associated notification.
            
            resultId - If present will hold the result identifier of the 
            most recent confirmed, failed, or error result against this
            reservation.  The resultId can be used in the queryResult operation
            to retrieve the associated operation results.
         </xsd:documentation>
      </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:QuerySummaryResultCriteriaType" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="requesterNSA"        type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="notificationId"      type="tns:NotificationIdType" minOccurs="0" />
            <xsd:element name="resultId"            type="tns:ResultIdType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
  
    <xsd:complexType name="QuerySummaryResultCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the query summary result containing
                versioned reservation information and associated child
                connection identifiers.
                
                Elements:
                
                schedule - Time parameters specifying the life of the service.
                
                serviceType - The specific service type of this reservation. 
                This service type string maps into the list of supported service
                definitions defined by the network providers.  In turn, the
                service type specifies the specific service elements carried in
                an instance of this type (through the ANY definition) that
                are associated with the requested service.  This element is
                mandatory.

                children - If this connection reservation is aggregating child
                connections then this element contains basic summary
                information about the child connection segment.

                any - Provides a flexible mechanism allowing additional elements

                to be provided such as the service specific attributes specified

                by serviceType.  Additional use of this element field is beyond

                the current scope of this NSI specification, but may be used in

                the future to extend the existing protocol without requiring a

                schema change.


                Attributes:
                
                version - Version of the reservation instance.
                
                anyAttribute - Provides a flexible mechanism allowing additional

                attributes to be provided as needed.  Use of this attribute field

                is beyond the current scope of this NSI specification, but may be
                used in the future to extend the existing protocol without

                requiring a schema change.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="schedule"      type="tns:ScheduleType" />
            <xsd:element name="serviceType"   type="xsd:string" />
            <xsd:element name="children"      type="tns:ChildSummaryListType" minOccurs="0" />
            <xsd:any     namespace="##other"  processContents="lax" minOccurs="0" maxOccurs="unbounded" />            
        </xsd:sequence>
        <xsd:attribute    name="version"      type="xsd:int" use="required" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
    </xsd:complexType>
    
    <xsd:complexType name="ChildSummaryListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element containing a list of child NSA and their
                associated connection information. 
                
                Elements:
                
                child - Summary path information for a child NSA.  Each child
                element is ordered and contains a connection segment in the
                overall path.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="child" type="tns:ChildSummaryType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ChildSummaryType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type is used to model a connection reservation's summary
                path information.  The structure provides the next level of
                connection information but not state.

                Elements:

                connectionId - The connection identifier associated with the
                reservation and path segment.
                
                providerNSA - The provider NSA holding the connection
                information associated with this instance of data.
                
                serviceType - The specific service type of this reservation. 
                This service type string maps into the list of supported service
                definitions defined by the network providers.  In turn, the
                service type specifies the specific service elements carried
                in an instance of this type (through the ANY definition) that
                is associated with the requested service.  This element is
                mandatory.

                any - Provides a flexible mechanism allowing additional elements

                to be provided such as the service specific attributes specified

                by serviceType.  Additional use of this element field is beyond

                the current scope of this NSI specification, but may be used in

                the future to extend the existing protocol without requiring a

                schema change.

                
                Attributes:
                
                order - Specification of ordered path elements.
                
                anyAttribute - Provides a flexible mechanism allowing additional

                attributes to be provided as needed.  Use of this attribute field

                is beyond the current scope of this NSI specification, but may be
                used in the future to extend the existing protocol without

                requiring a schema change.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element  name="connectionId" type="ftypes:ConnectionIdType" />
            <xsd:element  name="providerNSA"  type="ftypes:NsaIdType" />
            <xsd:element  name="serviceType"  type="xsd:string" />
            <xsd:any      namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute    name="order"        type="xsd:int" use="required" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
    </xsd:complexType>
    
    <xsd:complexType name="QueryRecursiveResultType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type contains the common reservation elements and detailed
                path data for "Recursive" query results.
                
                Elements:
                
                connectionId - The Provider NSA assigned connectionId for this
                reservation. This value will be unique within the context
                of the Provider NSA.
                
                globalReservationId - An optional global reservation id that can be
                used to correlate individual related service reservations through
                the network. This must be populated with a Universally Unique
                Identifier (UUID) URN as per ITU-T Rec. X.667 | ISO/IEC 9834-8:2005
                and IETF RFC 4122.
                
                description - An optional description for the service reservation.
                
                criteria - A set of versioned reservation criteria information.

                requesterNSA - The requester NSA associated with the reservation.

                connectionStates - The reservation's overall connection states.
                
                notificationId - If present represents the notification identifier
                of the most recent error notification against this reservation.
                The notificationId can be used in the queryNotification operation
                to retrieve the associated notification.
                
                resultId - If present will hold the result identifier of the 
                most recent confirmed, failed, or error result against this
                reservation.  The resultId can be used in the queryResult operation
                to retrieve the associated operation results.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"        type="ftypes:ConnectionIdType" />
            <xsd:element name="globalReservationId" type="tns:GlobalReservationIdType" minOccurs="0" />
            <xsd:element name="description"         type="xsd:string" minOccurs="0" />
            <xsd:element name="criteria"            type="tns:QueryRecursiveResultCriteriaType" minOccurs="0" maxOccurs="unbounded" />
            <xsd:element name="requesterNSA"        type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"    type="tns:ConnectionStatesType" />
            <xsd:element name="notificationId"      type="tns:NotificationIdType" minOccurs="0" />
            <xsd:element name="resultId"            type="tns:ResultIdType" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="QueryRecursiveResultCriteriaType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Type definition for the query recursive result containing
                versioned reservation information and associated child
                connection identifiers.
                
                Elements:
                
                schedule - Time parameters specifying the life of the service.
                
                serviceType - The specific service type of this reservation. 
                This service type string maps into the list of supported service
                definitions defined by the network providers.  In turn, the
                service type specifies the specific service elements carried in
                an instance of this type (through the ANY definition) that
                are associated with the requested service.
                
                children - If this connection reservation is aggregating child
                connections then this element contains detailed information
                about the child connection segment.  The level of detail
                include is left up to the individual NSA and their
                authorization policies.

                any - Provides a flexible mechanism allowing additional elements

                to be provided such as the service specific attributes specified

                by serviceType.  Additional use of this element field is beyond

                the current scope of this NSI specification, but may be used in

                the future to extend the existing protocol without requiring a

                schema change.


                Attributes:
                
                version - Version of the reservation instance.
                
                anyAttribute - Provides a flexible mechanism allowing additional

                attributes to be provided as needed.  Use of this attribute field

                is beyond the current scope of this NSI specification, but may be
                used in the future to extend the existing protocol without

                requiring a schema change.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element  name="schedule"     type="tns:ScheduleType" />
            <xsd:element  name="serviceType"  type="xsd:string" />
            <xsd:element  name="children"     type="tns:ChildRecursiveListType" minOccurs="0" />
            <xsd:any      namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute    name="version"      type="xsd:int" use="required" />
        <xsd:anyAttribute namespace="##other" processContents="lax" />
    </xsd:complexType>
    
    <xsd:complexType name="ChildRecursiveListType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element providing an envelope that will contain the
                list of child NSA and associated detailed connection
                information.
                
                Elements:
                
                child - Detailed path information for a child NSA.  Each
                child element is ordered and contains a connection segment in
                the overall path.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="child" type="tns:ChildRecursiveType" minOccurs="0" maxOccurs="unbounded" />
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ChildRecursiveType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                This type is used to model a connection reservation's detailed

                path information.  The structure is recursive so it is

                possible to model both an ordered list of connection segments,
                as well as the hierarchical connection segments created on

                child NSA in either a tree and chain configuration.
                
                Attributes:
                
                order - Specification of ordered path elements.
                
                Elements:
                
                connectionId - The connection identifier associated with the
                reservation and path segment.
                
                providerNSA - The provider NSA holding the connection
                information associated with this instance of data.
                
                connectionStates - This reservation's segments connection
                states.
                
                criteria - A set of versioned reservation criteria information.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="connectionId"       type="ftypes:ConnectionIdType" />
            <xsd:element name="providerNSA"        type="ftypes:NsaIdType" />
            <xsd:element name="connectionStates"   type="tns:ConnectionStatesType" />
            <xsd:element name="criteria"           type="tns:QueryRecursiveResultCriteriaType" minOccurs="1" maxOccurs="unbounded" />
        </xsd:sequence>
        <xsd:attribute name="order" type="xsd:int" use="required" />
    </xsd:complexType>

    <xsd:complexType name="QueryResultResponseType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A QueryResultResponseType type containing a single operation result
                matching the specified query criteria.
                
                Elements:
                
                resultId - A result identifier that is unique in the context of a
                connectionId.  This is a linearly increasing identifier that can
                be used for sequencing results in the order in which they were
                generated in the context of the connectionId.
                
                correlationId - The correlationId corresponding to the operation
                result as would have been returned in the NSI header element when
                this result was returned to the RA.
                
                timeStamp - The time this result was generated.
                
                Choice of one of the following:
                
                reserveConfirmed - Reserve operation confirmation.
                
                reserveFailed - Reserve operation failure.
                
                reserveCommitConfirmed - Reserve commit operation confirmation.
                
                reserveCommitFailed - Reserve commit operation failure.
                
                reserveAbortConfirmed - Reserve abort operation confirmation.
                
                provisionConfirmed - Provision operation confirmation.
                
                releaseConfirmed - Release operation confirmation.
                
                terminateConfirmed - Terminate confirmation.
                
                error - Error response message.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="resultId"      type="tns:ResultIdType" />
            <xsd:element name="correlationId" type="ftypes:UuidType" />
            <xsd:element name="timeStamp"     type="ftypes:DateTimeType" />
            <xsd:choice>
                <xsd:element ref="tns:reserveConfirmed" />
                <xsd:element ref="tns:reserveFailed" />
                <xsd:element ref="tns:reserveCommitConfirmed" />
                <xsd:element ref="tns:reserveCommitFailed" />
                <xsd:element ref="tns:reserveAbortConfirmed" />
                <xsd:element ref="tns:provisionConfirmed" />
                <xsd:element ref="tns:releaseConfirmed" />
                <xsd:element ref="tns:terminateConfirmed" />
                <xsd:element ref="tns:error" />
            </xsd:choice>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ScheduleType">
      <xsd:annotation>
         <xsd:documentation xml:lang="en">
             A type definition modelling the reservation schedule start and end
             time parameters.

            Elements:

            startTime - The start time of the reservation.

            A start time of "now" is represented by a nil value in the
            startTime element.  For backwards compatibility an absent
            startTime element in the initial reserve message also represents
            a start time of "now".

            An absent startTime element in a modification operation indicates
            there is no change to startTime.  A startTime element with a nil
            value within a modify request represents a modification of
            startTime to "now".

            If a reserve request has a startTime in the past it should be
            considered as a start time of "now".

            endTime - The end time of the reservation.

            An "indefinite" end time is represented by a nil value in the
            endTime element.  For backwards compatibility an absent endTime
            element in the inital reserve message also represents an
            "indefinite" end time.

            An absent endTime element in a modification operation indicates
            there is no change to endTime.  An endTime element with a nil value
            within a modify request represents a modification of endTime to
            "indefinite".

            If a reserve request has a endTime in the past it should be
            considered as an invalid reservation request.
         </xsd:documentation>
      </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="startTime" type="ftypes:DateTimeType" nillable="true" minOccurs="0" />
            <xsd:element name="endTime"   type="ftypes:DateTimeType" nillable="true" minOccurs="0" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="ConnectionStatesType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A holder element containing the state machines associated with
                a connection reservation.
                
                Elements:
                
                reservationState - Models the current connection reservation
                state.
                
                provisionState - Models the current connection provisioning
                state.
                
                lifecycleState - Models the current connection lifecycle state.
                
                dataPlaneStatus - Models the current connection data plane
                activation state.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="reservationState"   type="tns:ReservationStateEnumType" />
            <xsd:element name="provisionState"     type="tns:ProvisionStateEnumType" />
            <xsd:element name="lifecycleState"     type="tns:LifecycleStateEnumType" />
            <xsd:element name="dataPlaneStatus"    type="tns:DataPlaneStatusType" />
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:complexType name="DataPlaneStatusType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Models the current connection activation state within the
                data plane.

                Elements:
                
                active - True if the data plane is active.  For an aggregator,
                this flag is true when data plane is activated in all
                participating children.
                
                version - Version of the connection reservation this entry is
                modelling.
                
                versionConsistent - Always true for uPA. For an aggregator,
                if version numbers of all children are the same. This flag is
                true. This field is valid when Active is true.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="active"            type="xsd:boolean" />
            <xsd:element name="version"           type="xsd:int" />
            <xsd:element name="versionConsistent" type="xsd:boolean" />
        </xsd:sequence>
    </xsd:complexType>
    
   <!-- ******************************************************************
        *                       XML base types                           *
        ****************************************************************** -->
        
    <xsd:simpleType name="GlobalReservationIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A specific type for a globalReservationId just in case we need
                to change it in the future.  This type will be populated with
                a OGF URN (reference artifact 6478 "Procedure for Registration
                of Subnamespace Identifiers in the URN:OGF Hierarchy") to be
                used for compatibility with other external systems.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:anyURI" />
    </xsd:simpleType>

    <xsd:simpleType name="NotificationIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A specific type for a notificationId that is unique in the context
                of a connectionId.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:long" />
    </xsd:simpleType>
    
    <xsd:simpleType name="ResultIdType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                A specific type for a resultId that is an identifier unique in the
                context of a connectionId.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:long" />
    </xsd:simpleType>

    <xsd:simpleType name="EventEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Notification event message types.  Possible values are:
                
                activateFailed – Indicates that the data plane activation related
                to a reservation has failed, and therefore, there is no data plane
                connectivity for the reporting uPA.
                
                deactivateFailed – Indicates that deactivation of the data plane
                has failed, and as a result, data plane connectivity may still be
                in place.
                
                dataplaneError – Indicates that an error has occurred in the data
                plane and a loss of connectivity may be the result.
                
                forcedEnd – Indicates that the reservation was administratively
                terminated by a provider NSA within the network.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="activateFailed" />
            <xsd:enumeration value="deactivateFailed" />
            <xsd:enumeration value="dataplaneError" />
            <xsd:enumeration value="forcedEnd" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ReservationStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection reservation state values for the connection services
                reservation state machine.  Possible state values are:
                
                ReserveStart – A steady state for the reservation state machine
                in which a reservation is created and committed.  In the case
                of the first reservation request this state represents the
                initial reservation shell has been committed to database.
                
                ReserveChecking – A transient state modelling the act of checking
                the feasibility of a new reservation request, or a request to
                modify an existing reservation.
                
                ReserveFailed – A steady state for the reservation state machine
                in which the initial reservation or a subsequent modification
                request has failed.
                
                ReserveAborting - A transient state modelling the act of aborting a
                pending reservation modify request.
                
                ReserveHeld - A steady state for the reservation state machine in
                which the initial reservation or a subsequent modification request
                has successfully had the request resources reserved, but has not
                yet been committed.
                
                ReserveCommitting - A transient state modelling the act of committing
                a held set of reservation resources.
                
                ReserveTimeout - A steady state for the reservation state machine in
                which the held resources have been locally timed out on a uPA,
                resulting in a transition from the ReserveHeld to ReserveTimeout state.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ReserveStart" />
            <xsd:enumeration value="ReserveChecking" />
            <xsd:enumeration value="ReserveFailed" />
            <xsd:enumeration value="ReserveAborting" />
            <xsd:enumeration value="ReserveHeld" />
            <xsd:enumeration value="ReserveCommitting" />
            <xsd:enumeration value="ReserveTimeout" />
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:simpleType name="ProvisionStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection provisioning state values for modelling the connection
                services provision state machine.
                
                The Provision State Machine (PSM) is a simple state machine that
                transits between the Provisioned and the Released state. An
                instance of the PSM for a reservation is created in the Released
                state when the first reserve request is received, however, a
                provision request cannot be processed until the first version
                of the reservation has been successful committed.  If a
                provision request is received before the first version of a
                reservation has been created, then it must be rejected with an
                error.
                
                The PSM transits states independent of the state of the
                Reservation State Machine. Note that staying at the Provisioned
                state is necessary but not sufficient to activate the data plane.
                The data plane is active if the PSM is in “Provisioned” state
                AND current_time is between startTime and endTime.
                
                Possible state values are:
                
                Released – A steady state for the provision state machine in which data
                plane resources for this reservation are in a released state, resulting
                in an inactive data plane.
                
                Provisioning - A transient state modelling the act of provisioning the
                reservation’s associated data plane resources.
                
                Provisioned - A steady state for the provision state machine in which
                data plane resources for this reservation are in a provisioned state.
                This state does not imply that data plane resources are active, but it
                does indicate that a uPA can active the data plane resources if
                current_time is between startTime and endTime.
                
                Releasing - A transient state modelling the act of releasing the
                reservation’s associated data plane resources.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Released" />
            <xsd:enumeration value="Provisioning" />
            <xsd:enumeration value="Provisioned" />
            <xsd:enumeration value="Releasing" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="LifecycleStateEnumType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
                Connection lifecycle state values for the reservation lifecycle
                state machine.  The lifecycle state machine is instantiated when
                a reservation is committed.  Possible state values are:
                
                Created – A steady state for the lifecycle state machine and the
                initial state after a reservation has been committed.
                
                Failed – A steady state for the lifecycle state machine that is
                reached if a forcedEnd error is received from a uPA.
                
                PassedEndTime - The reservation has exceeded scheduled end time.
                
                Terminating - A transient state modelling the act of terminating
                the reservation.
                
                Terminated - A steady state for the lifecycle state machine that
                is reached when the reservation is terminated by the uRA.
            </xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Created" />
            <xsd:enumeration value="Failed" />
            <xsd:enumeration value="PassedEndTime" />
            <xsd:enumeration value="Terminating" />
            <xsd:enumeration value="Terminated" />
        </xsd:restriction>
    </xsd:simpleType>
</xsd:schema>
