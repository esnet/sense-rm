
nsi:
  ddsUrl: https://example.net:8401/dds
  proxy: (http://localhost:8080|http://localhost:8999/poop)
  nsaId: "urn:ogf:network:example.net:2013:nsa:application-test"
  ddsAuditTimer: 600
  ddsExpiryInterval: 600
  ddsPoolSize: 4
  peers:
    - https://nsi-aggr-west.es.net/discovery
  providerNsaId: "urn:ogf:network:es.net:2013:nsa:nsi-aggr-west"
  networkId: "urn:ogf:network:es.net:2013:"

  # How many seconds do we block a requesting thread waiting for an asynchronous NSI response?
  operationWaitTimer: 240

  defaultServiceType: http://services.ogf.org/nsi/2013/12/descriptions/EVTS.A-GOLE
  defaultUnits: "bps"
  defaultGranularity: 1

  # Control the polling of change within the network.
  modelAuditTimer: 120
  modelPruneSize: 10

  server:
    address: example.net
    port: 8401
    packageName: net.es.sense.rm.driver.nsi
    secure: true

  client:
    maxConnPerRoute: 10
    maxConnTotal: 80
    secure: true

  secure:
    production: false
    keyStore:
      type: JKS
      file: config/keystore.jks
      password: changeit
    trustStore:
      type: JKS
      file: config/keystore.jks
      password: changeit

  accessControl:
    enabled: true
    rules:
      - access: READ
        dn:
          - "EMAILADDRESS=bob@example.com, CN=Bobby Boogie, OU=Sciences Network, O=Example Networks, L=New York, ST=NY, C=US"
      - access: WRITE
        dn:
          - "CN=nsi-aggr-west.es.net, OU=Domain Control Validated"
        nsaId:
          - "urn:ogf:network:es.net:2013:nsa:nsi-aggr-west"
spring:
  session:
    store-type: jdbc
  jpa:
    show-sql: on
    generate-ddl: true
    hibernate:
      ddl-auto: create
      show-sql: on
      format_sql: true
  datasource:
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sense-n-rm
    password: bubbles

logging.level.org.springframework.web: debug
logging.level.org.hibernate: debug
logging.level.sql: debug

